{"ast":null,"code":"import User from \"./User\";\nimport Out from \"./Out\";\n\nclass UserData {\n  async getUser(userName) {\n    let response = await Out.get(\"https://localhost:7043/api/Users/\" + userName);\n\n    if (response !== null) {\n      return new User(response.id, response.name, response.server);\n    }\n\n    return new User();\n  }\n\n  async addUser(userName, password, nickName) {\n    Out.post(\"https://localhost:7043/api/Users\", {\n      id: userName,\n      password: password,\n      name: nickName\n    });\n    return true;\n  }\n\n  async login(userName, password) {\n    let response = await Out.post(\"https://localhost:7043/api/Users/Login\", {\n      id: userName,\n      password: password\n    });\n\n    if (!response) {\n      return null;\n    }\n\n    let user = new User(userName, userName, \"localhost:7043\", response.result);\n    return user;\n  }\n\n}\n\nconst users = new UserData();\nexport default users;","map":{"version":3,"sources":["/Users/maayan/Projects/Sermo_V2-1/SermoMain/src/dataBase/UserData.js"],"names":["User","Out","UserData","getUser","userName","response","get","id","name","server","addUser","password","nickName","post","login","user","result","users"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,MAAMC,QAAN,CAAe;AACA,QAAPC,OAAO,CAACC,QAAD,EAAW;AACtB,QAAIC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAJ,CACnB,sCAAsCF,QADnB,CAArB;;AAGA,QAAIC,QAAQ,KAAK,IAAjB,EAAuB;AACrB,aAAO,IAAIL,IAAJ,CAASK,QAAQ,CAACE,EAAlB,EAAsBF,QAAQ,CAACG,IAA/B,EAAqCH,QAAQ,CAACI,MAA9C,CAAP;AACD;;AACD,WAAO,IAAIT,IAAJ,EAAP;AACD;;AAEY,QAAPU,OAAO,CAACN,QAAD,EAAWO,QAAX,EAAqBC,QAArB,EAA+B;AAC1CX,IAAAA,GAAG,CAACY,IAAJ,CAAS,kCAAT,EAA6C;AAC3CN,MAAAA,EAAE,EAAEH,QADuC;AAE3CO,MAAAA,QAAQ,EAAEA,QAFiC;AAG3CH,MAAAA,IAAI,EAAEI;AAHqC,KAA7C;AAKA,WAAO,IAAP;AACD;;AAEU,QAALE,KAAK,CAACV,QAAD,EAAWO,QAAX,EAAqB;AAC9B,QAAIN,QAAQ,GAAG,MAAMJ,GAAG,CAACY,IAAJ,CAAS,wCAAT,EAAmD;AACtEN,MAAAA,EAAE,EAAEH,QADkE;AAEtEO,MAAAA,QAAQ,EAAEA;AAF4D,KAAnD,CAArB;;AAIA,QAAI,CAACN,QAAL,EAAe;AACb,aAAO,IAAP;AACD;;AACD,QAAIU,IAAI,GAAG,IAAIf,IAAJ,CAASI,QAAT,EAAmBA,QAAnB,EAA6B,gBAA7B,EAA+CC,QAAQ,CAACW,MAAxD,CAAX;AACA,WAAOD,IAAP;AACD;;AA9BY;;AAiCf,MAAME,KAAK,GAAG,IAAIf,QAAJ,EAAd;AAEA,eAAee,KAAf","sourcesContent":["import User from \"./User\";\nimport Out from \"./Out\";\n\nclass UserData {\n  async getUser(userName) {\n    let response = await Out.get(\n      \"https://localhost:7043/api/Users/\" + userName\n    );\n    if (response !== null) {\n      return new User(response.id, response.name, response.server);\n    }\n    return new User();\n  }\n\n  async addUser(userName, password, nickName) {\n    Out.post(\"https://localhost:7043/api/Users\", {\n      id: userName,\n      password: password,\n      name: nickName,\n    });\n    return true;\n  }\n\n  async login(userName, password) {\n    let response = await Out.post(\"https://localhost:7043/api/Users/Login\", {\n      id: userName,\n      password: password,\n    });\n    if (!response) {\n      return null;\n    }\n    let user = new User(userName, userName, \"localhost:7043\", response.result);\n    return user;\n  }\n}\n\nconst users = new UserData();\n\nexport default users;\n"]},"metadata":{},"sourceType":"module"}