{"ast":null,"code":"var _jsxFileName = \"/Users/maayan/Projects/Sermo/SermoReact/src/chatPage/RecordAudio.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./image.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RecordAudio(props) {\n  _s();\n\n  const activeContact = props.active;\n  const user = props.user;\n  const [audioFileSrc, setAudioFileSrc] = useState(null);\n  const [recProgress, setRecProgress] = useState(false);\n  const [toggle, setToggle] = useState(false);\n  let audioIN = {\n    audio: true\n  };\n  navigator.mediaDevices.getUserMedia(audioIN).then(function (mediaStreamObj) {\n    let start = document.getElementById(\"btnStart\");\n    let stop = document.getElementById(\"btnStop\");\n    let mediaRecorder = new MediaRecorder(mediaStreamObj);\n    start.addEventListener(\"click\", function (ev) {\n      mediaRecorder.start();\n      setRecProgress(true);\n      ev.preventDefault();\n    });\n    stop.addEventListener(\"click\", function (ev) {\n      if (mediaRecorder.state !== \"inactive\") {\n        mediaRecorder.stop();\n        setRecProgress(false);\n        ev.preventDefault();\n      }\n    });\n\n    mediaRecorder.ondataavailable = function (ev) {\n      dataArray.push(ev.data);\n    };\n\n    let dataArray = [];\n\n    mediaRecorder.onstop = function (ev) {\n      let audioData = new Blob(dataArray, {\n        type: \"audio/mp3;\"\n      });\n      dataArray = [];\n      let audioSrc = window.URL.createObjectURL(audioData); //playAudio.src = audioSrc;\n\n      setAudioFileSrc(audioSrc);\n    };\n  }) // If any error occurs then handles the error\n  .catch(function (err) {\n    console.log(err.name, err.message);\n  });\n\n  function newAudioMessage() {\n    user.sendMessage(audioFileSrc, activeContact.getName(), \"audio\");\n    setToggle(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"toggle-id\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"btnStart\",\n        children: \"START RECORDING\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), recProgress && /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"Prog\",\n        children: \"recording in progress...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), \"\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"btnStop\",\n        children: \"STOP RECORDING\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Fl\",\n      type: \"submit\",\n      onClick: newAudioMessage,\n      children: \"send audio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RecordAudio, \"/FA5HYHVr09vahUY5yHYc7Jq0bo=\");\n\n_c = RecordAudio;\nexport default RecordAudio;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecordAudio\");","map":{"version":3,"sources":["/Users/maayan/Projects/Sermo/SermoReact/src/chatPage/RecordAudio.js"],"names":["useState","RecordAudio","props","activeContact","active","user","audioFileSrc","setAudioFileSrc","recProgress","setRecProgress","toggle","setToggle","audioIN","audio","navigator","mediaDevices","getUserMedia","then","mediaStreamObj","start","document","getElementById","stop","mediaRecorder","MediaRecorder","addEventListener","ev","preventDefault","state","ondataavailable","dataArray","push","data","onstop","audioData","Blob","type","audioSrc","window","URL","createObjectURL","catch","err","console","log","name","message","newAudioMessage","sendMessage","getName"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport \"./image.css\";\n\nfunction RecordAudio(props) {\n  const activeContact = props.active;\n  const user = props.user;\n  const [audioFileSrc, setAudioFileSrc] = useState(null);\n  const [recProgress, setRecProgress] = useState(false);\n  const [toggle, setToggle] = useState(false);\n  let audioIN = { audio: true };\n  navigator.mediaDevices\n    .getUserMedia(audioIN)\n\n    .then(function (mediaStreamObj) {\n      let start = document.getElementById(\"btnStart\");\n      let stop = document.getElementById(\"btnStop\");\n\n      let mediaRecorder = new MediaRecorder(mediaStreamObj);\n\n      start.addEventListener(\"click\", function (ev) {\n        mediaRecorder.start();\n        setRecProgress(true);\n        ev.preventDefault();\n      });\n\n      stop.addEventListener(\"click\", function (ev) {\n        if (mediaRecorder.state !== \"inactive\") {\n          mediaRecorder.stop();\n          setRecProgress(false);\n          ev.preventDefault();\n        }\n      });\n\n      mediaRecorder.ondataavailable = function (ev) {\n        dataArray.push(ev.data);\n      };\n\n      let dataArray = [];\n\n      mediaRecorder.onstop = function (ev) {\n        let audioData = new Blob(dataArray, { type: \"audio/mp3;\" });\n\n        dataArray = [];\n\n        let audioSrc = window.URL.createObjectURL(audioData);\n\n        //playAudio.src = audioSrc;\n        setAudioFileSrc(audioSrc);\n      };\n    })\n    // If any error occurs then handles the error\n    .catch(function (err) {\n      console.log(err.name, err.message);\n    });\n  function newAudioMessage() {\n    user.sendMessage(audioFileSrc, activeContact.getName(), \"audio\");\n    setToggle(true);\n  }\n  return (\n    <div id=\"toggle-id\">\n      <p>\n        <button id=\"btnStart\">START RECORDING</button>\n        {recProgress && (\n          <label className=\"Prog\">recording in progress...</label>\n        )}\n        &nbsp;&nbsp;&nbsp;&nbsp;\n        <button id=\"btnStop\">STOP RECORDING</button>\n      </p>\n      <button className=\"Fl\" type=\"submit\" onClick={newAudioMessage}>\n        send audio\n      </button>\n    </div>\n  );\n}\nexport default RecordAudio;\n"]},"metadata":{},"sourceType":"module"}