{"ast":null,"code":"import User from \"./User\";\nimport Out from \"./Out\";\n\nclass UserData {\n  constructor(server) {\n    this.server = server;\n  }\n\n  async getUser(userName) {\n    let response = await Out.get(\"https://\" + this.server + \"/api/Users/\" + userName);\n\n    if (response !== null) {\n      return new User(response.id, response.name, response.server);\n    }\n\n    return new User();\n  }\n\n  async addUser(userName, password, nickName) {\n    Out.post(\"https://\" + this.server + \"/api/Users\", {\n      id: userName,\n      password: password,\n      name: nickName\n    });\n    return true;\n  }\n\n  async login(userName, password) {\n    let response = await Out.login(\"https://\" + this.server + \"/api/Users/Login\", {\n      id: userName,\n      password: password\n    });\n\n    if (!response) {\n      return null;\n    }\n\n    let user = new User(userName, userName, this.server, response);\n    return user;\n  }\n\n}\n\nconst users = new UserData(\"localhost:7217\");\nexport default users;","map":{"version":3,"sources":["/Users/maayan/Projects/Sermo/SermoReact/src/dataBase/UserData.js"],"names":["User","Out","UserData","constructor","server","getUser","userName","response","get","id","name","addUser","password","nickName","post","login","user","users"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,MAAMC,QAAN,CAAe;AACbC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,SAAKA,MAAL,GAAcA,MAAd;AACD;;AACY,QAAPC,OAAO,CAACC,QAAD,EAAW;AACtB,QAAIC,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAJ,CACnB,aAAa,KAAKJ,MAAlB,GAA2B,aAA3B,GAA2CE,QADxB,CAArB;;AAGA,QAAIC,QAAQ,KAAK,IAAjB,EAAuB;AACrB,aAAO,IAAIP,IAAJ,CAASO,QAAQ,CAACE,EAAlB,EAAsBF,QAAQ,CAACG,IAA/B,EAAqCH,QAAQ,CAACH,MAA9C,CAAP;AACD;;AACD,WAAO,IAAIJ,IAAJ,EAAP;AACD;;AAEY,QAAPW,OAAO,CAACL,QAAD,EAAWM,QAAX,EAAqBC,QAArB,EAA+B;AAC1CZ,IAAAA,GAAG,CAACa,IAAJ,CAAS,aAAa,KAAKV,MAAlB,GAA2B,YAApC,EAAkD;AAChDK,MAAAA,EAAE,EAAEH,QAD4C;AAEhDM,MAAAA,QAAQ,EAAEA,QAFsC;AAGhDF,MAAAA,IAAI,EAAEG;AAH0C,KAAlD;AAKA,WAAO,IAAP;AACD;;AAEU,QAALE,KAAK,CAACT,QAAD,EAAWM,QAAX,EAAqB;AAC9B,QAAIL,QAAQ,GAAG,MAAMN,GAAG,CAACc,KAAJ,CACnB,aAAa,KAAKX,MAAlB,GAA2B,kBADR,EAEnB;AACEK,MAAAA,EAAE,EAAEH,QADN;AAEEM,MAAAA,QAAQ,EAAEA;AAFZ,KAFmB,CAArB;;AAOA,QAAI,CAACL,QAAL,EAAe;AACb,aAAO,IAAP;AACD;;AACD,QAAIS,IAAI,GAAG,IAAIhB,IAAJ,CAASM,QAAT,EAAmBA,QAAnB,EAA6B,KAAKF,MAAlC,EAA0CG,QAA1C,CAAX;AACA,WAAOS,IAAP;AACD;;AApCY;;AAuCf,MAAMC,KAAK,GAAG,IAAIf,QAAJ,CAAa,gBAAb,CAAd;AAEA,eAAee,KAAf","sourcesContent":["import User from \"./User\";\nimport Out from \"./Out\";\n\nclass UserData {\n  constructor(server) {\n    this.server = server;\n  }\n  async getUser(userName) {\n    let response = await Out.get(\n      \"https://\" + this.server + \"/api/Users/\" + userName\n    );\n    if (response !== null) {\n      return new User(response.id, response.name, response.server);\n    }\n    return new User();\n  }\n\n  async addUser(userName, password, nickName) {\n    Out.post(\"https://\" + this.server + \"/api/Users\", {\n      id: userName,\n      password: password,\n      name: nickName,\n    });\n    return true;\n  }\n\n  async login(userName, password) {\n    let response = await Out.login(\n      \"https://\" + this.server + \"/api/Users/Login\",\n      {\n        id: userName,\n        password: password,\n      }\n    );\n    if (!response) {\n      return null;\n    }\n    let user = new User(userName, userName, this.server, response);\n    return user;\n  }\n}\n\nconst users = new UserData(\"localhost:7217\");\n\nexport default users;\n"]},"metadata":{},"sourceType":"module"}