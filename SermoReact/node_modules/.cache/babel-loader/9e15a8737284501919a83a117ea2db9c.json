{"ast":null,"code":"var _jsxFileName = \"/Users/maayan/Projects/Sermo/SermoReact/src/chatPage/SubChat.js\";\nimport \"./subChat.css\";\nimport PrintLog from \"./PrintLog\";\nimport { Row } from \"react-bootstrap\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SubChat(props) {\n  const msgs = props.messages; // useEffect(() => {\n  //   setMsgs(msgs);\n  // }, [msgs, setMsgs]);\n  //let msgArr = [];\n  //props.messages.then(function (blurb) {\n  //    for (let i = 0; i < blurb.length; i++) {\n  //        msgArr.push({ type: blurb[i].type, content: blurb[i].content, user: blurb[i].user, date: blurb[i].date });\n  //        setmsgArr(msgArr);\n  //    }\n  //}\n  //);\n\n  const userName = props.userName;\n\n  const description = function () {\n    if (msgs) {\n      return /*#__PURE__*/_jsxDEV(PrintLog, {\n        messages: msgs,\n        userName: userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"message\",\n      children: \"no messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"chat\",\n    children: description()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n}\n\n_c = SubChat;\nexport default SubChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubChat\");","map":{"version":3,"sources":["/Users/maayan/Projects/Sermo/SermoReact/src/chatPage/SubChat.js"],"names":["PrintLog","Row","useEffect","useState","SubChat","props","msgs","messages","userName","description"],"mappings":";AAAA,OAAO,eAAP;AACA,OAAOA,QAAP,MAAqB,YAArB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,QAAMC,IAAI,GAAGD,KAAK,CAACE,QAAnB,CADsB,CAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMC,QAAQ,GAAGH,KAAK,CAACG,QAAvB;;AACA,QAAMC,WAAW,GAAG,YAAY;AAC9B,QAAIH,IAAJ,EAAU;AACR,0BAAO,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAEA,IAApB;AAA0B,QAAA,QAAQ,EAAEE;AAApC;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,wBAAO;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GALD;;AAOA,sBAAO,QAAC,GAAD;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,cAAuBC,WAAW;AAAlC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KAtBQL,O;AAuBT,eAAeA,OAAf","sourcesContent":["import \"./subChat.css\";\nimport PrintLog from \"./PrintLog\";\nimport { Row } from \"react-bootstrap\";\nimport { useEffect, useState } from \"react\";\n\nfunction SubChat(props) {\n  const msgs = props.messages;\n  // useEffect(() => {\n  //   setMsgs(msgs);\n  // }, [msgs, setMsgs]);\n  //let msgArr = [];\n  //props.messages.then(function (blurb) {\n  //    for (let i = 0; i < blurb.length; i++) {\n  //        msgArr.push({ type: blurb[i].type, content: blurb[i].content, user: blurb[i].user, date: blurb[i].date });\n  //        setmsgArr(msgArr);\n  //    }\n  //}\n  //);\n  const userName = props.userName;\n  const description = function () {\n    if (msgs) {\n      return <PrintLog messages={msgs} userName={userName} />;\n    }\n    return <h6 className=\"message\">no messages</h6>;\n  };\n\n  return <Row className=\"chat\">{description()}</Row>;\n}\nexport default SubChat;\n"]},"metadata":{},"sourceType":"module"}