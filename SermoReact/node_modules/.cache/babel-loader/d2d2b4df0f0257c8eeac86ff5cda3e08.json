{"ast":null,"code":"var _jsxFileName = \"/Users/maayan/Projects/Sermo/SermoReact/src/chatPage/MessageForm.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Form, Col, Popover, OverlayTrigger, Stack } from \"react-bootstrap\";\nimport { useRef, useState } from \"react\";\nimport UploadImage from \"./UploadImage\";\nimport UploadVideo from \"./UploadVideo\";\nimport \"./image.css\";\nimport RecordAudio from \"./RecordAudio\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MessageForm(props) {\n  _s();\n\n  const [activeContact, setActiveContact] = props.active;\n  const user = props.user;\n  const sendMsg = props.sendMsg; //const [msgs, setMsgs] = props.messages;\n\n  const [type, setType] = useState(null); // const imageM = useRef();\n  // const videoM = useRef();\n  // const audioM = useRef();\n  // const [shouldUploadImage, setShouldUploadImage] = useState(false);\n  // const itsImageTime = function () {\n  //   setShouldUploadImage(true);\n  // };\n  // const stopImageTime = function () {\n  //   setShouldUploadImage(false);\n  // };\n  // const [shouldUploadVideo, setShouldUploadVideo] = useState(false);\n  // const itsVideoTime = function () {\n  //   setShouldUploadVideo(true);\n  // };\n  // const [shouldUploadRecord, setShouldUploadRecord] = useState(false);\n  // const itsRecordTime = function () {\n  //   setShouldUploadRecord(true);\n  // };\n  // const popover = (\n  //   <Popover id=\"popover-basic\">\n  //     <Popover.Body>\n  //       <Stack direction=\"horizontal\" gap={2}>\n  //         <label\n  //           ref={imageM}\n  //           className=\"imBut\"\n  //           htmlFor=\"actual-btn-im\"\n  //           onClick={itsImageTime}\n  //           onChange={() => setType(\"image\")}\n  //         >\n  //           Image\n  //           {shouldUploadImage && (\n  //             <UploadImage user={user} active={activeContact} />\n  //           )}\n  //           {stopImageTime}\n  //         </label>\n  //         <label\n  //           ref={videoM}\n  //           className=\"vidBut\"\n  //           htmlFor=\"actual-btn-vid\"\n  //           onClick={itsVideoTime}\n  //           onChange={() => setType(\"video\")}\n  //         >\n  //           Video\n  //           {shouldUploadVideo && (\n  //             <UploadVideo height={300} user={user} active={activeContact} />\n  //           )}\n  //         </label>\n  //         <label\n  //           data-toggle=\"collapse\"\n  //           ref={audioM}\n  //           className=\"audBut\"\n  //           htmlFor=\"actual-btn-vid\"\n  //           onClick={itsRecordTime}\n  //           onChange={() => setType(\"audio\")}\n  //         >\n  //           Audio\n  //           {shouldUploadRecord && (\n  //             <RecordAudio user={user} active={activeContact} />\n  //           )}\n  //         </label>\n  //       </Stack>\n  //     </Popover.Body>\n  //   </Popover>\n  // );\n\n  const textM = useRef(null);\n\n  const sendTextMessage = function () {\n    if (user) {\n      const msg = textM.current.value;\n      textM.current.value = \"\"; // const msgsCopy = msgs.slice();\n      // msgsCopy.push({\n      //   type: \"text\",\n      //   content: msg,\n      //   user: user.getName(),\n      //   date: new Date(),\n      // });\n      // setMsgs(msgsCopy);\n\n      user.sendMessage(msg, activeContact);\n      sendMsg(activeContact.getName(), msg);\n    }\n  };\n\n  const handleSubmit = function (event) {\n    event.preventDefault();\n\n    if (!textM.current.value) {\n      return;\n    }\n\n    sendTextMessage();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    autoComplete: \"off\",\n    noValidate: true,\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"horizontal\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"col-xxl-10\",\n        as: Col,\n        controlId: \"validationCustom01\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"MsgInput\",\n          ref: textM,\n          type: \"text\",\n          placeholder: \"Message\",\n          onChange: () => setType(\"text\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"success\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MessageForm, \"FjZxre6O9hU+YBUAotWIasvpx9c=\");\n\n_c = MessageForm;\nexport default MessageForm; // <OverlayTrigger trigger=\"click\" placement=\"top\" overlay={popover}>\n//           <Button variant=\"secondary\">Options</Button>\n//         </OverlayTrigger>\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageForm\");","map":{"version":3,"sources":["/Users/maayan/Projects/Sermo/SermoReact/src/chatPage/MessageForm.js"],"names":["Button","Form","Col","Popover","OverlayTrigger","Stack","useRef","useState","UploadImage","UploadVideo","RecordAudio","MessageForm","props","activeContact","setActiveContact","active","user","sendMsg","type","setType","textM","sendTextMessage","msg","current","value","sendMessage","getName","handleSubmit","event","preventDefault"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Form,\n  Col,\n  Popover,\n  OverlayTrigger,\n  Stack,\n} from \"react-bootstrap\";\nimport { useRef, useState } from \"react\";\nimport UploadImage from \"./UploadImage\";\nimport UploadVideo from \"./UploadVideo\";\nimport \"./image.css\";\nimport RecordAudio from \"./RecordAudio\";\n\nfunction MessageForm(props) {\n  const [activeContact, setActiveContact] = props.active;\n  const user = props.user;\n  const sendMsg = props.sendMsg;\n  //const [msgs, setMsgs] = props.messages;\n  const [type, setType] = useState(null);\n\n  // const imageM = useRef();\n  // const videoM = useRef();\n  // const audioM = useRef();\n\n  // const [shouldUploadImage, setShouldUploadImage] = useState(false);\n  // const itsImageTime = function () {\n  //   setShouldUploadImage(true);\n  // };\n  // const stopImageTime = function () {\n  //   setShouldUploadImage(false);\n  // };\n  // const [shouldUploadVideo, setShouldUploadVideo] = useState(false);\n  // const itsVideoTime = function () {\n  //   setShouldUploadVideo(true);\n  // };\n  // const [shouldUploadRecord, setShouldUploadRecord] = useState(false);\n  // const itsRecordTime = function () {\n  //   setShouldUploadRecord(true);\n  // };\n\n  // const popover = (\n  //   <Popover id=\"popover-basic\">\n  //     <Popover.Body>\n  //       <Stack direction=\"horizontal\" gap={2}>\n  //         <label\n  //           ref={imageM}\n  //           className=\"imBut\"\n  //           htmlFor=\"actual-btn-im\"\n  //           onClick={itsImageTime}\n  //           onChange={() => setType(\"image\")}\n  //         >\n  //           Image\n  //           {shouldUploadImage && (\n  //             <UploadImage user={user} active={activeContact} />\n  //           )}\n  //           {stopImageTime}\n  //         </label>\n  //         <label\n  //           ref={videoM}\n  //           className=\"vidBut\"\n  //           htmlFor=\"actual-btn-vid\"\n  //           onClick={itsVideoTime}\n  //           onChange={() => setType(\"video\")}\n  //         >\n  //           Video\n  //           {shouldUploadVideo && (\n  //             <UploadVideo height={300} user={user} active={activeContact} />\n  //           )}\n  //         </label>\n  //         <label\n  //           data-toggle=\"collapse\"\n  //           ref={audioM}\n  //           className=\"audBut\"\n  //           htmlFor=\"actual-btn-vid\"\n  //           onClick={itsRecordTime}\n  //           onChange={() => setType(\"audio\")}\n  //         >\n  //           Audio\n  //           {shouldUploadRecord && (\n  //             <RecordAudio user={user} active={activeContact} />\n  //           )}\n  //         </label>\n  //       </Stack>\n  //     </Popover.Body>\n  //   </Popover>\n  // );\n\n  const textM = useRef(null);\n\n  const sendTextMessage = function () {\n    if (user) {\n      const msg = textM.current.value;\n      textM.current.value = \"\";\n      // const msgsCopy = msgs.slice();\n      // msgsCopy.push({\n      //   type: \"text\",\n      //   content: msg,\n      //   user: user.getName(),\n      //   date: new Date(),\n      // });\n      // setMsgs(msgsCopy);\n      user.sendMessage(msg, activeContact);\n      sendMsg(activeContact.getName(), msg);\n    }\n  };\n\n  const handleSubmit = function (event) {\n    event.preventDefault();\n    if (!textM.current.value) {\n      return;\n    }\n    sendTextMessage();\n  };\n\n  return (\n    <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n      <Stack direction=\"horizontal\">\n        <Form.Group\n          className=\"col-xxl-10\"\n          as={Col}\n          controlId=\"validationCustom01\"\n        >\n          <Form.Control\n            className=\"MsgInput\"\n            ref={textM}\n            type=\"text\"\n            placeholder=\"Message\"\n            onChange={() => setType(\"text\")}\n          />\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"success\">\n          Send\n        </Button>\n      </Stack>\n    </Form>\n  );\n}\n\nexport default MessageForm;\n\n// <OverlayTrigger trigger=\"click\" placement=\"top\" overlay={popover}>\n//           <Button variant=\"secondary\">Options</Button>\n//         </OverlayTrigger>\n"]},"metadata":{},"sourceType":"module"}